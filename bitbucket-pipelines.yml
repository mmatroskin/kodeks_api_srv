# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
# image: atlassian/default-image:2
image: python:3.8

pipelines:
  default:
    - step:
        name: 'Test'
        script:
          - echo "Your build and test goes here..."
          - ls
          # - cd kodeks_api_srv
          - pip install -r requirements.txt
          # - python3 ./main_app/main.py
    - step:
        name: 'Build'
        script:
          - echo "Your build goes here..."
          - git archive --format=tar.gz release -o kodeks-api-srv.tar.gz
        artifacts:
          - kodeks-api-srv.tar.gz

  # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
    - step:
        name: 'Deployment to Production'
        deployment: production
        trigger: manual
        caches:
          - pip
        script:
          - echo "Your deployment to production script goes here..."
          - pipe: atlassian/heroku-deploy:1.2.1
            variables:
              HEROKU_API_KEY: $HEROKU_API_KEY
              HEROKU_APP_NAME: $HEROKU_APP_NAME
              ZIP_FILE: kodeks-api-srv.tar.gz
